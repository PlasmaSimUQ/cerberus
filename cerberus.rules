EBASE := MFP.

DIM ?= 2

LAZY ?= TRUE
USE_MPI ?= TRUE
USE_OMP ?= FALSE
DEBUG ?= FALSE
WARN_ALL ?= FALSE

#=== EILMER GAS ===

EILMER_GAS ?= FALSE
EILMER_HOME ?= $(TOP)/gdtkinst
EILMER_LIB = $(TOP)/gdtkinst/lib
EILMER_URL ?= https://github.com/gdtk-uq/gdtk
DLANG_LIB ?= /usr/lib

ifeq ($(EILMER_GAS), TRUE)
LIBRARY_LOCATIONS += $(DLANG_LIB) $(EILMER_LIB)
LIBRARIES         += -lgas
USERSuffix := $(USERSuffix).EILMER
DEFINES += -DEILMER_GAS
LIBRARIES += -Wl,-rpath=$(EILMER_LIB)

endif


#=== PPROF ===

PPROF ?= FALSE
PPROF_INCLUDE ?= /usr/include/gperftools
PPROF_LIB ?= /usr/lib/x86_64-linux-gnu

ifeq ($(PPROF), TRUE)
INCLUDE_LOCATIONS += $(PPROF_INCLUDE)
LIBRARY_LOCATIONS += $(PPROF_LIB)
LIBRARIES         += -lprofiler
USERSuffix := $(USERSuffix).PPROF
DEFINES += -DPPROF
endif


#=== EB ===

USE_EB ?= FALSE

ifeq ($(DIM), 1)
USE_EB := FALSE
endif

ifeq ($(USE_EB), TRUE)
USERSuffix := $(USERSuffix).EB
endif

#=== PYTHON ===

PYTHON_PLOT ?= FALSE
PYTHON_INCLUDE ?= /usr/include/python3.10
PYTHON_LIB ?= /usr/lib/python3.10/config-3.10-x86_64-linux-gnu

ifeq ($(PYTHON_PLOT), TRUE)
INCLUDE_LOCATIONS += $(PYTHON_INCLUDE)
LIBRARY_LOCATIONS += $(PYTHON_LIB)
LIBRARIES         += -l$(notdir $(PYTHON_INCLUDE))
USERSuffix := $(USERSuffix).PYTHON
DEFINES += -DPYTHON
endif

#=== PARTICLES ===

AMREX_PARTICLES ?= FALSE

ifeq ($(DIM), 1)
AMREX_PARTICLES := FALSE
endif

ifeq ($(AMREX_PARTICLES), TRUE)
DEFINES += -DAMREX_PARTICLES
USERSuffix := $(USERSuffix).PARTICLES
endif

#=== SYMPLECTIC INTERPOLANT ===
SYMPLECTIC ?= FALSE

ifeq ($(SYMPLECTIC),P8R2)
DEFINES += -DINTERPOLATION_P8R2 -DWRANGE=2 -DSYMPLECTIC
USERSuffix := $(USERSuffix).SYMPLECTIC_P8R2
endif

ifeq ($(SYMPLECTIC),PWL)
DEFINES += -DINTERPOLATION_PWL -DWRANGE=1 -DSYMPLECTIC
USERSuffix := $(USERSuffix).SYMPLECTIC_PWL
endif

CERBERUS_GIT_NAME := $(shell git branch | grep \* | sed 's/[(*) ]/_/g')
CERBERUS_GIT_VERSION := $(shell git describe --abbrev=12 --dirty --always --tags)
DEFINES += -DCERBERUS_GIT_VERSION=\"$(CERBERUS_GIT_VERSION)\"
DEFINES += -DCERBERUS_GIT_NAME=\"$(CERBERUS_GIT_NAME)\"

DEFINES += -DAMREX_CRSEGRNDOMP

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

include $(TOP)/Source/Make.package
include $(AMREX_HOME)/Src/Base/Make.package
include $(AMREX_HOME)/Src/Boundary/Make.package
include $(AMREX_HOME)/Src/AmrCore/Make.package
include $(AMREX_HOME)/Src/Amr/Make.package
include $(AMREX_HOME)/Src/LinearSolvers/MLMG/Make.package

ifeq ($(USE_EB), TRUE)
include $(AMREX_HOME)/Src/EB/Make.package
endif

ifeq ($(AMREX_PARTICLES), TRUE)
include $(AMREX_HOME)/Src/Particle/Make.package
endif

include $(AMREX_HOME)/Tools/GNUMake/Make.rules


define ENVVARS
	export DGD=$(EILMER_HOME)
	export DGD_REPO=$(TOP)/.gdtk_git
	export PATH=$$PATH:$$DGD/bin
	export DGD_LUA_PATH=$$DGD/lib/?.lua
	export DGD_LUA_CPATH=$$DGD/lib/?.so
endef

export ENVVARS

env:
	rm -f env && \
	echo "$$ENVVARS" > env

eilmer: env
	TOP='$(TOP)' EILMER_HOME='$(EILMER_HOME)' EILMER_URL='$(EILMER_URL)' MF='$(MAKEFLAGS)' ./build_eilmer.sh

uninstall_eilmer:
	rm -rf $(TOP)/gdtkinst

clean_eilmer:
	$(MAKE) -C $(TOP)/.gdtk_git/src/gas clean
	$(MAKE) -C $(TOP)/.gdtk_git/src/eilmer clean
	$(MAKE) -C $(TOP)/.gdtk_git/extern/lua-5.4.3 clean


clean_all: | uninstall_eilmer clean_eilmer clean
