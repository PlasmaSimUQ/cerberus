#======== AMREX ==========
amrex.fpe_trap_invalid=0
amrex.fpe_trap_zero=0
fpe_trap_overflow=0
amr.v = 0

# ======== TIME ==========
max_step  = {max_step}
stop_time = 1.0

# ======== DOMAIN ==========
geometry.is_periodic = 1 1 1
geometry.coord_sys   = 0  # 0 => cart, 1 => RZ  2=>spherical

# lo. res.
geometry.prob_lo     =     -1 -0.5 0
geometry.prob_hi     =     1 0.5 1
amr.n_cell           =     {nx} {ny} 8

# ======== LOAD BALANCE ==========
amr.loadbalance_with_workestimates = 1
amr.loadbalance_level0_int = 10

# ======== GRID ==========
amr.max_level       = 0   # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 2 2 2 # refinement ratio
amr.regrid_int      = 2 2 2 2 2 2 2 # how often to regrid
amr.blocking_factor = 2
amr.max_grid_size   = 16
amr.n_error_buf     = 2 2 2 2 2 2 0 # number of buffer cells in error est
amr.grid_eff        = 0.75     # what constitutes an efficient grid
amr.subcycling_mode = Auto # time sub-cycling (Auto, None, Manual, Optimal)

# ======== GEOMETRY ==========
eb2.geom_type = all_regular

# ======== PARTICLES ==========
particles.do_particles = 0
particles.v = 0


# ======== OUTPUT ==========

# CHECKPOINT FILES
amr.checkpoint_files_output = 1
amr.check_file              = {name}.chk    # root name of checkpoint file
amr.check_int               = -1    # number of timesteps between checkpoints
amr.check_per               = 1.0

# PLOTFILES
amr.plot_files_output = 0
amr.plot_file         = {name}.plt     # root name of plotfile
amr.plot_int          = 1      # number of timesteps between plotfiles
amr.plot_per          = -1.0


#amr.restart = 


# ======== PROBLEM DESCRIPTION ==========
# Note that the problem description is defined as a lua script
# Everything within the double quotes "..." must conform to lua standards
# Note that any strings should therefore be defined by single quotes '...'

mfp.lua = "

-- ======== PROBLEM ==========

require('mms') -- get all the manufactured solutions

hydro_bcs_0 = {
    rho = mms_rho_0,
    x_vel =    mms_u_0,
    y_vel =    mms_v_0,
    z_vel =    mms_w_0,
    p =   mms_p_0,
}

hydro_bcs_1 = {
    rho = mms_rho_1,
    x_vel =    mms_u_1,
    y_vel =    mms_v_1,
    z_vel =    mms_w_1,
    p =   mms_p_1,
}

field_bcs = {
    x_D = mms_Dx,
    y_D = mms_Dy,
    z_D = mms_Dz,
    x_B = mms_Bx,
    y_B = mms_By,
    z_B = mms_Bz,
    phi = mms_phi,
    psi = mms_psi,
}

mhd_bcs = {
    rho = mms_mhd_rho,
    x_vel =  mms_mhd_u,
    y_vel =  mms_mhd_v,
    z_vel =  mms_mhd_w,
    p =   mms_mhd_p,
    x_B = mms_mhd_Bx,
    y_B = mms_mhd_By,
    z_B = mms_mhd_Bz,
    psi = mms_mhd_psi,
}

lightspeed = mms_c0
Larmor = mms_dL
Debye = mms_dD

-- === SETTINGS ===

verbosity = 1
cfl = 0.25

do_face_sources = 0
do_CTU = 0

-- === DEFINE STATES ===

states = {

    fluid_0 = {
        type='hydro',
        mass=mms_m_0,
        charge=mms_q_0, 
        gamma=mms_g_0, 
        reconstruction='O6', 
        flux='HLLE',
        value = {
            rho = mms_rho_0,
            x_vel =    mms_u_0,
            y_vel =    mms_v_0,
            z_vel =    mms_w_0,
            p =   mms_p_0,
        },

        bc = {
            x={hi=hydro_bcs_0, lo=hydro_bcs_0},
            y={hi=hydro_bcs_0, lo=hydro_bcs_0},
        },
    },

    fluid_1 = {
        type='hydro',
        mass=mms_m_1,
        charge=mms_q_1, 
        gamma=mms_g_1, 
        reconstruction='O6', 
        flux='HLLE',
        value = {
            rho = mms_rho_1,
            x_vel =    mms_u_1,
            y_vel =    mms_v_1,
            z_vel =    mms_w_1,
            p =   mms_p_1,
        },

        bc = {
            x={hi=hydro_bcs_1, lo=hydro_bcs_1},
            y={hi=hydro_bcs_1, lo=hydro_bcs_1},
        },
    },

    field = {
        type='field',
        reconstruction='O6', 
        flux='RankineHugoniot',
        value = {
            x_B  = mms_Bx,
            y_B  = mms_By,
            z_B  = mms_Bz,
            x_D = mms_Dx,
            y_D = mms_Dy,
            z_D = mms_Dz,
            phi = mms_phi,
            psi = mms_psi,
        },

        bc = {
            x={hi=field_bcs, lo=field_bcs},
            y={hi=field_bcs, lo=field_bcs},
        },

        div_transport = 1.0,
    },

    mhd = {
        type='mhd',
        gamma=mms_mhd_g, 
        mass=mms_mhd_m,
        reconstruction='O6', 
        flux='HLLE',
        value = {
            rho = mms_mhd_rho,
            x_vel = mms_mhd_u,
            y_vel = mms_mhd_v,
            z_vel = mms_mhd_w,
            p =   mms_mhd_p,
            x_B  = mms_mhd_Bx,
            y_B  = mms_mhd_By,
            z_B  = mms_mhd_Bz,
            psi = mms_mhd_psi,
        },

        bc = {
            x={hi=mhd_bcs, lo=mhd_bcs},
            y={hi=mhd_bcs, lo=mhd_bcs},
        },

        div_transport = -mms_ch_mhd,
    },

}


sources = {

    mms={
        solver = 'explicit',
        sources = {
            plasma={
                'fluid_0', 'fluid_1', 'field', type='plasma5',
            },
            damp_field={
                'field', type='damp_divergence', damping_ratio=mms_cr,
            },
            damp_mhd={
                'mhd', type='damp_divergence', damping_ratio=mms_cr,
            },
            fluid_0={'fluid_0', 
                type='user',
                value = {
                    rho=mms_Srho_0,
                    x_mom=mms_Smx_0,
                    y_mom=mms_Smy_0,
                    z_mom=mms_Smz_0,
                    nrg=mms_Snrg_0,
                },
            },
            fluid_1={'fluid_1', 
                type='user',
                value = {
                    rho=mms_Srho_1,
                    x_mom=mms_Smx_1,
                    y_mom=mms_Smy_1,
                    z_mom=mms_Smz_1,
                    nrg=mms_Snrg_1,
                },
            },
            field={'field', 
                type='user',
                value = {
                    x_B  = mms_SBx,
                    y_B  = mms_SBy,
                    z_B  = mms_SBz,
                    x_D = mms_SDx,
                    y_D = mms_SDy,
                    z_D = mms_SDz,
                    phi = mms_Sphi,
                    psi = mms_Spsi,
                },
            },
            mhd={'mhd', 
                type='user',
                value = {
                    rho=mms_Smhd_rho,
                    x_mom=mms_Smhd_mx,
                    y_mom=mms_Smhd_my,
                    z_mom=mms_Smhd_mz,
                    nrg=mms_Smhd_nrg,
                    x_B  = mms_Smhd_Bx,
                    y_B  = mms_Smhd_By,
                    z_B  = mms_Smhd_Bz,
                    psi = mms_Smhd_psi,
                },
            },
        },
    },    
}


"

